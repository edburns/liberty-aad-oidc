<?xml version="1.0" encoding="UTF-8"?>
<server description="defaultServer">

	<!-- Enable features -->
	<featureManager>
		<feature>javaee-8.0</feature>
		<feature>openidConnectClient-1.0</feature>
		<feature>transportSecurity-1.0</feature>
		<feature>appSecurity-2.0</feature>
	</featureManager>

	<!-- defaultKeyStore is pre-generated and used for SSL & JWT. Java cacerts is used for defaultTrustStore. 
		Because there are http requests within application server via SSL, the defaultKeyStore must be 
		imported to defaultTrustStore before server is running. See Dockerfile for more information. -->
    <ssl id="defaultSSLConfig" keyStoreRef="defaultKeyStore" trustStoreRef="defaultTrustStore" />
    <keyStore id="defaultKeyStore" location="${server.config.dir}/resources/security/${DEFAULT_KEYSTORE_NAME}" 
		type="JKS" password="${DEFAULT_KEYSTORE_PASS}" />
    <keyStore id="defaultTrustStore" location="${JAVA_HOME}/lib/security/cacerts" 
		type="JKS" password="${JAVA_TRUSTSTORE_PASS}" />

	<openidConnectClient id="liberty-aad-oidc-javaeecafe"
		clientId="${CLIENT_ID}"
		clientSecret="${CLIENT_SECRET}"
        discoveryEndpointUrl="https://login.microsoftonline.com/${TENANT_ID}/v2.0/.well-known/openid-configuration" 
		signatureAlgorithm="RS256"
		userIdentityToCreateSubject="upn"
		groupIdentifier="groups"
		inboundPropagation="supported" />

	<!-- To access this server from a remote client add a host attribute to 
		the following element, e.g. host="*" -->
	<httpEndpoint id="defaultHttpEndpoint" host="*" httpPort="9080" httpsPort="9643" />

	<!-- Automatically expand WAR files and EAR files -->
	<applicationManager autoExpand="true" />

	<dataSource id="JavaEECafeDB"
		jdbcDriverRef="postgresql-driver" jndiName="jdbc/JavaEECafeDB"
		transactional="true" type="javax.sql.ConnectionPoolDataSource">
		<properties databaseName="postgres" password=""
			portNumber="5432" serverName="172.17.0.2" user="postgres" />
	</dataSource>

	<jdbcDriver id="postgresql-driver"
		javax.sql.ConnectionPoolDataSource="org.postgresql.ds.PGConnectionPoolDataSource"
		javax.sql.XADataSource="org.postgresql.xa.PGXADataSource"
		libraryRef="postgresql-library" />

	<library id="postgresql-library">
		<fileset dir="${shared.resource.dir}" id="PostgreSQLFileset" includes="postgresql-42.2.4.jar" />
	</library>

	<webApplication id="javaee-cafe" location="${server.config.dir}/apps/javaee-cafe.war">
		<application-bnd>
			<security-role name="users">
				<special-subject type="ALL_AUTHENTICATED_USERS" />
			</security-role>
		</application-bnd>
	</webApplication>
</server>